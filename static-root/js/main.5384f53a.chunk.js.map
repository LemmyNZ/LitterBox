{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","open","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetList","username","nextUrl","undefined","replace","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserPicture","user","UserDisplay","nameDisplay","includeFullName","first_name","last_name","Fragment","ParentTweet","parent","Tweet","isRetweet","reTweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActiontweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didlookUp","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","createElement","appEl","getElementById","ReactDOM","render","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5384f53a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.open(method, url)\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403){\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1){\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n        \r\n      }\r\n\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    console.log(e)\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n  \r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\"\r\n  \r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username){\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback)\r\n}","import React  from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(status, response)\r\n      if ((status === 200 || status === 201) && didPerformAction ){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\n\r\nexport function UserLink (props){\r\n    const {username} = props\r\n    const handleUserLink = (event) =>{\r\n      window.location.href= `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n  }\r\n  \r\n  \r\nexport function UserPicture(props){\r\n    const {user} = props \r\n    return <UserLink username={user.username}><span className='px-3 py-2 rounded-circle bg-dark text-white'>@{user.username[0]}</span></UserLink>\r\n}\r\n  \r\nexport function UserDisplay(props){\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ${user.username} ` : null\r\n\r\n    return <React.Fragment>\r\n            {nameDisplay}\r\n            <UserLink username={user.username}>@{user.username}</UserLink>\r\n        </React.Fragment>\r\n}","import React, {useState}  from 'react'\r\n\r\n\r\nimport {ActionBtn} from './buttons'\r\nimport {UserDisplay, UserPicture} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n  const {tweet} = props\r\n  return tweet.parent ? <Tweet isRetweet reTweeter={props.reTweeter} hideActions className={' '} tweet={tweet.parent} />: null\r\n}\r\nexport function Tweet(props) {\r\n  const {tweet, didRetweet, hideActions, isRetweet, reTweeter} = props\r\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet: null)\r\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n  className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n  var path = window.location.pathname\r\n  const match = path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId = match ? match.groups.tweetid : -1\r\n\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n  \r\n  const handleLink = (event) =>{\r\n    event.preventDefault()\r\n    window.location.href = `/${tweet.id}`\r\n  }\r\n  const handlePerformAction = (newActiontweet, status) =>{\r\n    if (status === 200){\r\n    setActionTweet(newActiontweet)\r\n    } else if (status === 201){\r\n      if (didRetweet){\r\n        didRetweet(newActiontweet)\r\n      }\r\n    }\r\n  }\r\n\r\n  return <div className={className}>\r\n    {isRetweet === true &&<div className='mb-2'>\r\n<span className='small text-muted'>Rewteet via @ <UserDisplay user={reTweeter}/></span>\r\n      </div>}\r\n    <div className='d-flex'>\r\n        <div className=''>\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className='col-11'>\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n            <ParentTweet tweet={tweet} reTweeter={tweet.user}/>\r\n          </div>\r\n      <div className='btn btn-group px-0'>\r\n      {(actionTweet && hideActions !== true) && <React.Fragment>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n      </React.Fragment>\r\n      }\r\n        {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n      </div>\r\n      </div>  \r\n    </div>     \r\n  </div>\r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) =>{\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) =>{\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\nconst textAreaRef = React.createRef()\r\nconst {didTweet} = props\r\nconst handleBackendUpdate = (response, status) =>{\r\n    if (status === 201){\r\n    didTweet(response)\r\n    } else {\r\n    console.log(response)\r\n    alert(\"An error occured please try again\")\r\n    }\r\n}\r\n\r\nconst handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n}\r\nreturn <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n        </textarea>\r\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n    </form>\r\n</div>\r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {Tweet} from './detail'\r\nimport {TweetCreate} from './create'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didlookUp, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n  const handleBackendLookup = (response, status) =>{\r\n    if (status === 200){\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didlookUp === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  },[tweetId, didlookUp, setDidLookup]\r\n  )\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\n\nconst e = React.createElement\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst tweetsEl = document.getElementById(\"LitterFeed\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetsFeedEl = document.getElementById(\"LitterFeed-mainfeed\")\nif (tweetsFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetsFeedEl.dataset), tweetsFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".litter-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}